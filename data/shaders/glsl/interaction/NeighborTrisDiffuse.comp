#version 450
#extension GL_GOOGLE_include_directive : require
#include "../base/Common.glsl"
#include "Interaction.glsl"

layout (local_size_x = 8, local_size_y = 8) in;

layout(std430, binding = 0) buffer Triangles
{
   Triangle triangles[];
};

layout(std430, binding = 1) buffer Points
{
   Coord3D points[];
};

layout(std430, binding = 2) buffer Intersect
{
   int intersected[];
};

layout(std430, binding = 3) buffer Unintersect
{
   int unintersected[];
};


layout (push_constant) uniform PushConsts {
	uint num;
   Real diffusionAngle;
} regs;

void main() { 
   uint i = gl_GlobalInvocationID.x;
   uint j = gl_GlobalInvocationID.y;
   if (i >= regs.num || j >= regs.num) return;

   if (intersected[i] == 1)
   {
      if ((triangles[i][0] == triangles[j][0] && triangles[i][1] == triangles[j][1]) ||
         (triangles[i][0] == triangles[j][1] && triangles[i][1] == triangles[j][0]) ||
         (triangles[i][0] == triangles[j][0] && triangles[i][1] == triangles[j][2]) ||
         (triangles[i][0] == triangles[j][2] && triangles[i][1] == triangles[j][0]) ||
         (triangles[i][0] == triangles[j][1] && triangles[i][1] == triangles[j][2]) ||
         (triangles[i][0] == triangles[j][2] && triangles[i][1] == triangles[j][1]) ||

         (triangles[i][0] == triangles[j][0] && triangles[i][2] == triangles[j][1]) ||
         (triangles[i][0] == triangles[j][1] && triangles[i][2] == triangles[j][0]) ||
         (triangles[i][0] == triangles[j][0] && triangles[i][2] == triangles[j][2]) ||
         (triangles[i][0] == triangles[j][2] && triangles[i][2] == triangles[j][0]) ||
         (triangles[i][0] == triangles[j][1] && triangles[i][2] == triangles[j][2]) ||
         (triangles[i][0] == triangles[j][2] && triangles[i][2] == triangles[j][1]) ||

         (triangles[i][1] == triangles[j][0] && triangles[i][2] == triangles[j][1]) ||
         (triangles[i][1] == triangles[j][1] && triangles[i][2] == triangles[j][0]) ||
         (triangles[i][1] == triangles[j][0] && triangles[i][2] == triangles[j][2]) ||
         (triangles[i][1] == triangles[j][2] && triangles[i][2] == triangles[j][0]) ||
         (triangles[i][1] == triangles[j][1] && triangles[i][2] == triangles[j][2]) ||
         (triangles[i][1] == triangles[j][2] && triangles[i][2] == triangles[j][1])
         )
      {
         Triangle3D t1 = new_triangle3D(points[triangles[i][0]], points[triangles[i][1]], points[triangles[i][2]]);
         Triangle3D t2 = new_triangle3D(points[triangles[j][0]], points[triangles[j][1]], points[triangles[j][2]]);

         if (abs(dot(triangle_normal(t1), triangle_normal(t2))) >= cos(regs.diffusionAngle))
         {
            if (intersected[j] == 0 && unintersected[j] == 1)
            {
               intersected[j] = 1;
               unintersected[j] = 0;
            }
         }
      }
   }
}
